cmake_minimum_required(VERSION 3.10)
project(all)

IF(APPLE)
    execute_process(COMMAND uname -m OUTPUT_VARIABLE archstr)
    string (SUBSTRING ${archstr} 0 5 arch)
    if (arch STREQUAL "arm64")
        message("m1")
        SET(CMAKE_OSX_ARCHITECTURES "arm64" CACHE STRING "Build architectures for Mac OS X" FORCE)	# x86_64;arm64
    else()
        SET(CMAKE_OSX_ARCHITECTURES "x86_64" CACHE STRING "Build architectures for Mac OS X" FORCE)
    endif()
ENDIF(APPLE)

add_subdirectory(xx_data_cpp_test1)
add_subdirectory(xx_obj_test1)
add_subdirectory(xx_lua_test1)
add_subdirectory(xx_lua_test2)
add_subdirectory(xx_queue_test1)
add_subdirectory(xx_threadpool_test1)
add_subdirectory(xx_string_test1)
add_subdirectory(xx_random_test1)
#add_subdirectory(xx_mysql_test1)
add_subdirectory(xx_sqlite_test1)
#add_subdirectory(xx_uv_test1)
add_subdirectory(xx_dict_test1)
add_subdirectory(xx_math_test1)
add_subdirectory(xx_asio_test1)
add_subdirectory(xx_asio_test2)
add_subdirectory(xx_asio_test3)
add_subdirectory(xx_asio_test4)
add_subdirectory(xx_asio_test5)
add_subdirectory(xx_asio_test6)
add_subdirectory(xx_asio_test7)
add_subdirectory(xx_asio_test8)
add_subdirectory(xx_asio_test9)
add_subdirectory(xx_asio_testA)
add_subdirectory(xx_asio_testB)
add_subdirectory(xx_asio_testC)
add_subdirectory(xx_asio_testD)
add_subdirectory(xx_asio_testE)
add_subdirectory(xx_asio_testF)
add_subdirectory(xx_asio_test_http)
add_subdirectory(xx_asio_test_http_client)
add_subdirectory(xx_coro_test1)
add_subdirectory(xx_coro_test2)
if(WINDOWS OR LINUX)
    add_subdirectory(xx_logger_test1)
elseif(LINUX)
    add_subdirectory(xx_epoll_test1)
    add_subdirectory(xx_epoll_test2)
    add_subdirectory(xx_epoll_test3)
    add_subdirectory(xx_epoll_test4)
    add_subdirectory(xx_epoll_test5)
    add_subdirectory(xx_epoll_test6)
endif()
